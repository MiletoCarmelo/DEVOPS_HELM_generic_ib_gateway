name: CI

on:
  push:
    branches:
      - main

env:
  BRANCH_PAGES: github-pages
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ib-gateway

permissions:
  contents: write
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'false'  # Cette option garantit que les submodules sont clonÃ©s

      - name: Checkout to aarch64 branch
        run: |
          git clone https://github.com/gnzsnz/ib-gateway-docker.git 
          cd ib-gateway-docker
          git checkout aarch64  # Checkout to the aarch64 branch
          cd ..

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/amd64,linux/arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: 'linux/amd64,linux/arm64'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase IMAGE_NAME
        id: set_image_name
        run: |
          echo "IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Check ls  and pwd 
        run: |
          sudo ls -la 
          sudo pwd
    
      - name: Build and push with Docker Compose
        run: |
          docker-compose -f docker-compose.yaml build  # Build the services defined in the docker-compose file
          docker-compose -f docker-compose.yaml push   # Push the built images to the registry

      # Optionally, you can also add an additional step to clean up or prune images if needed:
      - name: Cleanup Docker images
        run: |
          docker system prune -f --all --volumes


  release-chart:
    # needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Update values.yaml with new image
        run: |
          sed -i "s|repository:.*|repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}|" ./values.yaml
          sed -i "s|tag:.*|tag: latest|" ./values.yaml

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: ..
          branch: ${{ env.BRANCH_PAGES }}
          charts_url: https://raw.githubusercontent.com/${{ github.repository }}/${{ env.BRANCH_PAGES }}
          linting: false

      - name: Summary
        run: |
          echo "Chart URL: https://raw.githubusercontent.com/${{ github.repository }}/${{ env.BRANCH_PAGES }}"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:latest"